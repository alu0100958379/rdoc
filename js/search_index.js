var search_data = {"index":{"searchIndex":["alimento","ambiental","list","object","plato","practica8","error","<=>()","<=>()","each()","get_vct()","get_alimentos()","get_carbo()","get_carbohidratos()","get_co2()","get_gramos()","get_lip()","get_lipidos()","get_m2()","get_prot()","get_proteinas()","indicador_carb()","indicador_nutr()","insert_alimento()","insert_gramos()","new()","new()","new()","pophead()","poptail()","proportion()","push()","to_s()","to_s()","code_of_conduct","gemfile","gemfile.lock","guardfile","license","readme","rakefile","setup","practica8.gemspec"],"longSearchIndex":["alimento","ambiental","list","object","plato","practica8","practica8::error","alimento#<=>()","ambiental#<=>()","list#each()","plato#get_vct()","plato#get_alimentos()","alimento#get_carbo()","plato#get_carbohidratos()","ambiental#get_co2()","plato#get_gramos()","alimento#get_lip()","plato#get_lipidos()","ambiental#get_m2()","alimento#get_prot()","plato#get_proteinas()","ambiental#indicador_carb()","ambiental#indicador_nutr()","plato#insert_alimento()","plato#insert_gramos()","alimento::new()","list::new()","plato::new()","list#pophead()","list#poptail()","ambiental#proportion()","list#push()","ambiental#to_s()","plato#to_s()","","","","","","","","",""],"info":[["Alimento","","Alimento.html","","<p>Clase para definir un alimento y sus valores nutricionales\n"],["Ambiental","","Ambiental.html","","<p>Clase heredada de la clase Plato para representar su impacto ambiental\n"],["List","","List.html","","<p>Clase para representar objetos en forma de lista\n"],["Object","","Object.html","",""],["Plato","","Plato.html","","<p>Clase para representar un plato de comida\n"],["Practica8","","Practica8.html","",""],["Practica8::Error","","Practica8/Error.html","",""],["<=>","Alimento","Alimento.html#method-i-3C-3D-3E","(toCompare)","<p>Método para poder usar los comparadores\n"],["<=>","Ambiental","Ambiental.html#method-i-3C-3D-3E","(other)","<p>Método para poder comparar platos ambientales\n"],["each","List","List.html#method-i-each","()","<p>Método para iterar la lista\n"],["get_VCT","Plato","Plato.html#method-i-get_VCT","()","<p>Método para obtener el valor calórico total del plato\n"],["get_alimentos","Plato","Plato.html#method-i-get_alimentos","()","<p>Método para obtener la lista de alimentos de un plato\n"],["get_carbo","Alimento","Alimento.html#method-i-get_carbo","()","<p>Método para obtener los carbohidratos\n"],["get_carbohidratos","Plato","Plato.html#method-i-get_carbohidratos","()","<p>Método para obtener los carbohidratos en relacion a los gramos\n"],["get_co2","Ambiental","Ambiental.html#method-i-get_co2","()","<p>Método para obtener el co2 en relacion a los gramos\n"],["get_gramos","Plato","Plato.html#method-i-get_gramos","()","<p>Método para obtener la lista de gramos de alimentos de un plato\n"],["get_lip","Alimento","Alimento.html#method-i-get_lip","()","<p>Método para obtener los lipidos\n"],["get_lipidos","Plato","Plato.html#method-i-get_lipidos","()","<p>Métodos para obtener los lipidos en relacion a los gramos\n"],["get_m2","Ambiental","Ambiental.html#method-i-get_m2","()","<p>Método para obtener los m2 en relacion a los gramos\n"],["get_prot","Alimento","Alimento.html#method-i-get_prot","()","<p>Método para obtener las proteinas\n"],["get_proteinas","Plato","Plato.html#method-i-get_proteinas","()","<p>Método para obtener las proteinas en relacion a los gramos\n"],["indicador_carb","Ambiental","Ambiental.html#method-i-indicador_carb","()","<p>Método para obtener el indicador de huella de los gases\n"],["indicador_nutr","Ambiental","Ambiental.html#method-i-indicador_nutr","()","<p>Método para obtener el indicador de huella nutricional\n"],["insert_alimento","Plato","Plato.html#method-i-insert_alimento","(alimento)","<p>Método para insertar un alimento en la lista de alimentos\n"],["insert_gramos","Plato","Plato.html#method-i-insert_gramos","(gramos)","<p>Método para insertar gramos correspondientes al alimento\n"],["new","Alimento","Alimento.html#method-c-new","(a,v,w,x,y,z)","<p>Constructor parametrizado\n"],["new","List","List.html#method-c-new","()","<p>Constructor que inicializa la lista con su cabecera y su cola\n"],["new","Plato","Plato.html#method-c-new","(name)","<p>Constructor parametrizado que instancia las listas de alimentos y gramos\nrespectivamente\n"],["popHead","List","List.html#method-i-popHead","()","<p>Método para sacar de la lista por la cabecera\n"],["popTail","List","List.html#method-i-popTail","()","<p>Método para sacar de la lista por la cola\n"],["proportion","Ambiental","Ambiental.html#method-i-proportion","(v,p)","<p>Método para incrementar los precios en relacion a la máxima huella\n"],["push","List","List.html#method-i-push","(valor)","<p>Método para introducir en la lista\n"],["to_s","Ambiental","Ambiental.html#method-i-to_s","()","<p>Método para imprimir el co2 y los m2 de un plato formateado\n"],["to_s","Plato","Plato.html#method-i-to_s","()","<p>Método para imprimir el plato formateado\n"],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>In the interest of fostering an open and welcoming environment, …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in practica8.gemspec gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  practica8 (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2019 Felipe\n<p>Permission is hereby granted, free of charge, to any person …\n"],["README","","README_md.html","","<p>Practica8\n<p>Autor: Felipe Esquivel Delgado\nFecha: 29/11/2019\nPractica 8 - Herencia y\nModulos\n<p>Welcome to your …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["practica8.gemspec","","practica8_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless\n$LOAD_PATH.include?(lib) …\n"]]}}